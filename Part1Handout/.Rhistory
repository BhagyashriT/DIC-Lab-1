yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
slice3 <- genetic[5,]
p4 <- plot_ly(slice3, labels = ~Sequence.Genetic.Group, values = ~Distinct.count.of.Cdc.Id.., type = 'pie',domain = list(x = c(0.8, 1),y=c(0.2,0.4)),showlegend=T) %>%
layout(title = 'Influenza A(H3N2)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
pl = subplot(p,p2,p3,shareX=F,shareY=F)%>%
layout(showlegend = F)
pl = subplot(p,p2,p3,p4,shareX=F,shareY=F)%>%
layout(showlegend = F)
pl
p2 <- plot_ly(slice1, labels = ~Sequence.Genetic.Group, values = ~Distinct.count.of.Cdc.Id.., type = 'pie',domain = list(x = c(0.5, 0.8),y=c(0.5,0.7)),showlegend=T) %>%
layout(title = 'Influenza A(H3N2)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
slice2 <- genetic[c(1,2,3),]
p3 <- plot_ly(slice2, labels = ~Sequence.Genetic.Group, values = ~Distinct.count.of.Cdc.Id.., type = 'pie',domain = list(x = c(0.5, 0.8),y=c(0.2,0.4)),showlegend=T) %>%
layout(title = 'Influenza A(H3N2)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
slice3 <- genetic[5,]
p4 <- plot_ly(slice3, labels = ~Sequence.Genetic.Group, values = ~Distinct.count.of.Cdc.Id.., type = 'pie',domain = list(x = c(0.8, 1),y=c(0.2,0.4)),showlegend=T) %>%
layout(title = 'Influenza A(H3N2)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
pl = subplot(p,p2,p3,p4,shareX=F,shareY=F)%>%
layout(showlegend = F)
pl
p4 <- plot_ly(slice3, labels = ~Sequence.Genetic.Group, values = ~Distinct.count.of.Cdc.Id.., type = 'pie',domain = list(x = c(0.8, 1),y=c(0.5,0.7)),showlegend=T) %>%
layout(title = 'Influenza A(H3N2)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
pl = subplot(p,p2,p3,p4,shareX=F,shareY=F)%>%
layout(showlegend = F)
pl
genetic
slice4 <- genetic[4,]
p4 <- plot_ly(slice4, labels = ~Sequence.Genetic.Group, values = ~Distinct.count.of.Cdc.Id.., type = 'pie',domain = list(x = c(0.8, 1),y=c(0.2,0.4)),showlegend=T) %>%
layout(title = 'Influenza A(H3N2)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
pl = subplot(p,p2,p3,p4,shareX=F,shareY=F)%>%
layout(showlegend = F)
pl
slice4 <- genetic[4,]
p5 <- plot_ly(slice4, labels = ~Sequence.Genetic.Group, values = ~Distinct.count.of.Cdc.Id.., type = 'pie',domain = list(x = c(0.8, 1),y=c(0.2,0.4)),showlegend=T) %>%
layout(title = 'Influenza A(H3N2)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
pl = subplot(p,p2,p3,p4,p5,shareX=F,shareY=F)%>%
layout(showlegend = F)
pl
p5
pl = subplot(p,p2,p3,p4,p5,shareX=F,shareY=F)%>%
layout(showlegend = F)
pl
p4 <- plot_ly(slice3, labels = ~Sequence.Genetic.Group, values = ~Distinct.count.of.Cdc.Id.., type = 'pie',domain = list(x = c(0.8, 1),y=c(0.4,0.7)),showlegend=T) %>%
layout(title = 'Influenza A(H3N2)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
slice4 <- genetic[4,]
p5 <- plot_ly(slice4, labels = ~Sequence.Genetic.Group, values = ~Distinct.count.of.Cdc.Id.., type = 'pie',domain = list(x = c(0.8, 1),y=c(0.2,0.4)),showlegend=T) %>%
layout(title = 'Influenza A(H3N2)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p5
pl = subplot(p,p2,p3,p4,p5,shareX=F,shareY=F)%>%
layout(showlegend = F)
pl
p4 <- plot_ly(slice3, labels = ~Sequence.Genetic.Group, values = ~Distinct.count.of.Cdc.Id.., type = 'pie',domain = list(x = c(0.8, 1),y=c(0.2,0.7)),showlegend=T) %>%
layout(title = 'Influenza A(H3N2)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
slice4 <- genetic[4,]
p5
pl = subplot(p,p2,p3,p4,p5,shareX=F,shareY=F)%>%
layout(showlegend = F)
p5 <- plot_ly(slice4, labels = ~Sequence.Genetic.Group, values = ~Distinct.count.of.Cdc.Id.., type = 'pie',domain = list(x = c(0.8, 1),y=c(0.2,0.4)),showlegend=T) %>%
layout(title = 'Influenza A(H3N2)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
pl
p4 <- plot_ly(slice3, labels = ~Sequence.Genetic.Group, values = ~Distinct.count.of.Cdc.Id.., type = 'pie',domain = list(x = c(0.8, 1),y=c(0.5,0.7)),showlegend=T) %>%
layout(title = 'Influenza A(H3N2)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
slice4 <- genetic[4,]
p5 <- plot_ly(slice4, labels = ~Sequence.Genetic.Group, values = ~Distinct.count.of.Cdc.Id.., type = 'pie',domain = list(x = c(0.8, 1),y=c(0.2,0.4)),showlegend=T) %>%
layout(title = 'Influenza A(H3N2)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p5
pl = subplot(p,p2,p3,p4,p5,shareX=F,shareY=F)%>%
layout(showlegend = F)
pl
pl = subplot(p,p2,p3,p4,p5,shareX=F,shareY=F)%>%
layout(showlegend = T)
pl
pl = subplot(p,p2,p3,p4,p5,shareX=F,shareY=F)%>%
layout(showlegend = F)
pl
library(plotly)
df <- read.csv("StateDataforMap_2018.csv")
df
substr(df$ACTIVITY.LEVEL,7,8)
newdf <- data.frame(state = df$STATENAME,levels = substr(df$ACTIVITY.LEVEL,7,8),levelLabel = df$ACTIVITY.LEVEL.LABEL)
newdf
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state, locations = ~state,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state, locations = ~state,
color = ~levels, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state, locations = ~state,
color = ~levels, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state, locations = ~state,
color = ~levels, colors = 'Purples'
) %>%
#colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state, locations = ~code,
color = ~levels, colors = 'Purples'
) %>%
#colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p
newdf$levels
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df
df$hover
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
df$hover
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
l
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
g
colnames(df)
df$code
df$state
df$hover
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p
df$total.exports
library(plotly)
df <- read.csv("StateDataforMap_2018.csv")
newdf <- data.frame(state = df$STATENAME,levels = substr(df$ACTIVITY.LEVEL,7,8),levelLabel = df$ACTIVITY.LEVEL.LABEL)
newdf
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state,state.name= ~state
color = ~levels, colors = 'Purples'
) %>%
#colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state,state.name= ~state
color = ~levels, colors = 'Purples'
) %>%
#colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
state.abb
state
state.name
newdf$state
state.abb[match("Virginia",state.name)]
state.abb[match(newdf$state,state.name)]
newdf <- data.frame(state = df$STATENAME,levels = substr(df$ACTIVITY.LEVEL,7,8),levelLabel = df$ACTIVITY.LEVEL.LABEL)
state_abbs <- state.abb[match(newdf$state,state.name)]
newdf[state_codes] <- state_abbs
df <- read.csv("StateDataforMap_2018.csv")
state_abbs <- state.abb[match(df$STATENAME,state.name)]
newdf <- data.frame(state = df$STATENAME,levels = substr(df$ACTIVITY.LEVEL,7,8),levelLabel = df$ACTIVITY.LEVEL.LABEL,state_codes = state_abbs)
newdf
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes
color = ~levels, colors = 'Purples'
) %>%
#colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
newdf <- newdf[c(1,2,3,4,5),]
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes
color = ~levels, colors = 'Purples'
) %>%
#colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
newdf
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes
color = ~levels, colors = 'Purples'
) %>%
#colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes
color = ~levels, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2',
geo = g
)
source('D:/Study/Data Intensive Computing/Lab1/FluViewPhase2Data/HeatMap.R', echo=TRUE)
newdf <- newdf[c(1,2,3,4,5),]
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes
color = ~levels, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2',
geo = g
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes
color = ~levels, colors = 'Purples'
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes
color = ~levels, colors = 'Purples'
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes
color = ~levels, colors = 'Purples')
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes
color = ~levels, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2iuhkj',
geo = g
)
newdf
newdf <- data.frame(state = df$STATENAME,levels = substr(df$ACTIVITY.LEVEL,7,8),levelLabel = df$ACTIVITY.LEVEL.LABEL,state_codes = state_abbs)
newdf
temp <- newdf[-c(9,52,53,54)]
temp
temp <- newdf[-c(9,52,53,54),]
temp
newdf <- newdf[-c(9,52,53,54),]
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes
color = ~levels, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2iuhkj',
geo = g
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes
color = ~levels, colors = 'Purples'
) %>%
#colorbar(title = "Millions USD") %>%
layout(
title = '2iuhkj',
geo = g
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes
color = ~levels, colors = 'Purples'
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes
color = ~levels, colors = 'Purples')
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes)
p
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes)%>%
layout(geo = list(scope = 'usa'))
p
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes,color = ~levels)%>%
layout(geo = list(scope = 'usa'))
p
z = ~levels, text = ~state_codes,locations = ~state_codes,color = ~levels,colors = 'Purples')%>%
layout(geo = list(scope = 'usa'))
p
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes,color = ~levels,colors = 'Purples')%>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')))
p
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes,color = ~state_codes,colors = 'Purples')%>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')))
p
z = ~levels, text = ~state_codes,locations = ~state_codes,color = ~factor(levels),colors = 'Purples')%>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')))
p
z = ~levels, text = ~state_codes,locations = ~state_codes,color = factor(~levels),colors = 'Purples')%>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')))
p
z = ~levels, text = ~state_codes,locations = ~state_codes,color = ~levels,colors = 'Purples')%>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')))
p
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~state_codes,locations = ~state_codes,colors = 'Purples')%>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')))
p
newdf
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~levelLabel,locations = ~state_codes,colors = 'Purples')%>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')))
p
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~levelLabel,locations = ~state_codes,colors = 'Purples')%>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')), title = '201-19 Influenza Season week 4 ILI Activity level indicator')
p
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~levelLabel,locations = ~state_codes,colors = 'Purples')%>%
colorbar(title = "Millions USD") %>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')), title = '201-19 Influenza Season week 4 ILI Activity level indicator')
p
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~levelLabel,locations = ~state_codes,colors = 'Purples')%>%
colorbar(title = "Millions USD") %>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')), title = '201-19 Influenza Season week 4 ILI Activity level indicator (Hower to breakdown)')
p
z = ~levels, text = ~levelLabel,locations = ~state_codes,colors = 'Purples')%>%
colorbar(title = "Millions USD") %>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')), title = '201-19 Influenza Season week 4 ILI Activity level indicator \n (Hower to breakdown)')
p
z = ~levels, text = ~levelLabel,locations = ~state_codes,colors = 'Purples')%>%
colorbar(title = "Millions USD") %>%
layout(geo = list(scope = 'usa',projection = list(type = ' usa')), title = '201-19 Influenza Season week 4 ILI Activity level indicator \n (Hower to breakdown)')
p
z = ~levels, text = ~levelLabel,locations = ~state_codes,colors = 'Purples')%>%
colorbar(title = "Millions USD") %>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')), title = '201-19 Influenza Season week 4 ILI Activity level indicator \n (Hower to breakdown)')
p
newdf <- newdf[-c(9,52,53,54),]
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~levelLabel,locations = ~state_codes,colors = 'Purples')%>%
colorbar(title = "Millions USD") %>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')), title = '201-19 Influenza Season week 4 ILI Activity level indicator \n (Hower to breakdown)')
p
newdf
df
df <- read.csv("StateDataforMap_2018.csv")
state_abbs <- state.abb[match(df$STATENAME,state.name)]
newdf <- data.frame(state = df$STATENAME,levels = substr(df$ACTIVITY.LEVEL,7,8),levelLabel = df$ACTIVITY.LEVEL.LABEL,state_codes = state_abbs)
newdf <- newdf[-c(9,52,53,54),]
newdf
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~levelLabel,locations = ~state_codes,colors = 'Purples')%>%
colorbar(title = "Millions USD") %>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')), title = '201-19 Influenza Season week 4 ILI Activity level indicator \n (Hower to breakdown)')
p
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~levelLabel,locations = ~state_codes,colors = 'Purples')%>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')), title = '201-19 Influenza Season week 4 ILI Activity level indicator \n (Hower to breakdown)')
colorbar(p,title = "Millions USD")
p
z = ~levels, text = ~levelLabel,locations = ~state_codes,colors = 'Purples')%>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')), title = '201-19 Influenza Season week 4 ILI Activity level indicator \n (Hower to breakdown)')
p
newdf
install.packages('plotly')
install.packages("plotly")
install.packages("plotly")
library(plotly)
library(plotly)
df <- read.csv("StateDataforMap_2018.csv")
setwd("D:/Study/Data Intensive Computing/Lab1/FluViewPhase2Data")
df <- read.csv("StateDataforMap_2018.csv")
df
state_abbs <- state.abb[match(df$STATENAME,state.name)]
newdf <- data.frame(state = df$STATENAME,levels = substr(df$ACTIVITY.LEVEL,7,8),levelLabel = df$ACTIVITY.LEVEL.LABEL,state_codes = state_abbs)
newdf <- newdf[-c(9,52,53,54),]
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(newdf, locationmode = 'USA-states') %>%
add_trace(
z = ~levels, text = ~levelLabel,locations = ~state_codes,colors = 'Purples')%>%
layout(geo = list(scope = 'usa',projection = list(type = 'albers usa')), title = '201-19 Influenza Season week 4 ILI Activity level indicator \n (Hower to breakdown)')
p
